import{s as u,n as c}from"../chunks/scheduler.S4wXxuDW.js";import{S as m,i as _,g as h,s as g,B as p,h as d,f as n,c as w,z as b,k as i,A as v,a as f}from"../chunks/index._Dtmwb-l.js";new TextEncoder;class y{_watchId;_buffer;_callbackPool=[];constructor(e){const a={enableHighAccuracy:e};this._watchId=navigator.geolocation.watchPosition(async t=>{this.refresh(t)},this.handleWatchError,a)}getData(){if(!this._buffer)throw new Error("The buffer is empty.");return this._buffer}destroy(){navigator.geolocation.clearWatch(this._watchId)}registerCallback(e){this._callbackPool.push(e)}handleWatchError(e){console.error(`Failed to watch GPS: ${JSON.stringify(e)}`)}async refresh(e){this._buffer=e,this._callbackPool.forEach(async a=>{try{await a(e)}catch(t){console.error(`Callback ${a.name} failed due to the following error: ${JSON.stringify(t)}`)}})}}function x(s){let e,a,t,l="<h1>Live</h1>";return{c(){e=h("meta"),a=g(),t=h("div"),t.innerHTML=l,this.h()},l(r){const o=p("svelte-1cksgnx",document.head);e=d(o,"META",{name:!0,content:!0}),o.forEach(n),a=w(r),t=d(r,"DIV",{class:!0,"data-svelte-h":!0}),b(t)!=="svelte-9otdm7"&&(t.innerHTML=l),this.h()},h(){document.title="WebSensors Live",i(e,"name","description"),i(e,"content","A demo of web-sensors"),i(t,"class","text-column")},m(r,o){v(document.head,e),f(r,a,o),f(r,t,o)},p:c,i:c,o:c,d(r){r&&(n(a),n(t)),n(e)}}}function E(){const e=new URLSearchParams(window.location.search).get("target")??"";return decodeURIComponent(e)}function k(s){return console.log(E()),new y(!0),[]}class T extends m{constructor(e){super(),_(this,e,k,x,u,{})}}export{T as component};
